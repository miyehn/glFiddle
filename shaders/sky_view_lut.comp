#version 450

#include "sky_common.glsl"

layout(set = 3, binding = Slot_SkyViewLutRW, rgba16f) uniform writeonly image2D outSkyViewLut;

layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;
void main()
{
    uvec2 dtid = gl_GlobalInvocationID.xy;
    uvec2 texdim = params.skyViewLutTextureDimensions;
    vec2 uv = vec2(float(dtid.x + 0.5f) / texdim.x, float(dtid.y + 0.5f) / texdim.y);
    uv = vec2(fromSubUv(uv.x, texdim.x), fromSubUv(uv.y, texdim.y));

    vec3 cameraPosESProxy, viewDirProxy, dir2sunProxy;
    UvToSkyViewLutParams(
        uv, params.atmosphere.bottomRadius, params.cameraPosES, params.dir2sun,
        cameraPosESProxy, viewDirProxy, dir2sunProxy);

    //vec3 sampled = texture(transmittanceLut, uv).rgb;
    vec3 L = computeSkyAtmosphere(
        params.atmosphere,
        cameraPosESProxy,
        viewDirProxy,
        dir2sunProxy,
        vec3(1, 1, 1),
        params.skyViewNumSamplesMinMax);

    imageStore(outSkyViewLut, ivec2(gl_GlobalInvocationID.xy), vec4(L, 1));
}
