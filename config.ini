# Config file for niar

Pathtracer:
{
	# only affects rendering to file - automatically disabled if rendering to window.
	# also: multithreaded not supported yet when ISPC is turned off and is rendering to file
	ISPC: 1

	# bounding volume hierarchy; extremely slow if turned off
	UseBVH: 1

	# if true, pathtracer window is displayed only on lower left quarter of viewport 
	SmallWindow: 0

	Multithreaded: 1
	NumThreads: 16
	TileSize: 32

	UseDirectLight: 1
	AreaLightSamples: 1

	UseJitteredSampling: 1
	UseDOF: 0 # not implemented in ISPC yet

	MaxRayDepth: 32
	RussianRouletteThreshold: 0.03

    # will be rounded up to a square number
	MinRaysPerPixel: 49
}

# overlay viewport with specified debug texture?
ShowDebugTex: 0

# which debug texture to show
# `ls t` to see list of all debug textures
DebugTex: 1

# map values of debug texture from 0-1 to the following range
DebugTexMin: 0.0
DebugTexMax: 1.0

# which material set should be used to render scene
# 0: basic (independent of lighting, done in 1 pass, sort of like in 3D software editing viewport)
# 1: basic deferred (lambert, deferred shading, base color texture only)
# 2: whatever material that's assigned to it, likely deferred (lambert, deferred shading, base color + normal map textures)
MaterialSet: 2

# exposure compensation
Exposure: 0.0

# bloom
Bloom: 1
BloomThreshold: 2.0

# tone mapping switch, 0 or 1
ToneMapping: 1

# gamma correction switch, 0 or 1
GammaCorrect: 1


#---------------- ASSETS -------------------

# all paths are relative to project root

# compiles all shaders here on program startup
# Type: 1: blit (fragment) shader, draws a full-screen quad
#		2: vertex + fragment shader
#		4: vertex + tesselation + fragment
Shaders: (
	{
		Type: 1
		Name: "blit"
		FS: "shaders/quad.frag"
	},

	# for materials
	{
		Type: 2
		Name: "basic"
		VS: "shaders/basic.vert"
		FS: "shaders/basic.frag"
	},
	{
		Type: 2
		Name: "yellow"
		VS: "shaders/yellow.vert"
		FS: "shaders/yellow.frag"
	}
);

# loads textures on first use
Textures: (
);

Materials: (
	{
		Name: "basic"
		Shader: "basic"
		BaseColor: "white"
	}
);

# if no material is assigned to a mesh, it fallbacks to deferredBasic.
MaterialAssignments: (
);
