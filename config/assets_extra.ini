#---------------- ASSETS -------------------

# all paths are relative to project root

# compiles all shaders here on program startup
# Type: 1: blit (fragment) shader, draws a full-screen quad
#		2: vertex + fragment shader
#		4: vertex + tesselation + fragment
Shaders: (
	# for debugging
	{
		Type: 1
		Name: "copyDebug"
		FS: "shaders/blit_debug.frag"
	},
	{
		Type: 1
		Name: "blit"
		FS: "shaders/quad.frag"
	},

	# for post-processing effects
	{
		Type: 1
		Name: "exposureExtractBright"
		FS: "shaders/exposure_extract_bright.frag"
	},
	{
		Type: 1
		Name: "toneMapGammaCorrect"
		FS: "shaders/tone_map_gamma_correct.frag"
	},
	{
		Type: 1
		Name: "gaussianHorizontal"
		FS: "shaders/gaussian_horizontal.frag"
	},
	{
		Type: 1
		Name: "gaussianVertical"
		FS: "shaders/gaussian_vertical.frag"
	},

	# for materials
	{
		Type: 2
		Name: "basic"
		VS: "shaders/basic.vert"
		FS: "shaders/basic.frag"
	},
	{
		Type: 2
		Name: "geometry_basic"
		VS: "shaders/geometry_basic.vert"
		FS: "shaders/geometry_basic.frag"
	},
	{
		Type: 2
		Name: "geometry"
		VS: "shaders/geometry.vert"
		FS: "shaders/geometry.frag"
	},
	{
		Type: 2
		Name: "depth"
		VS: "shaders/clip_position.vert"
		FS: "shaders/empty.frag"
	},
	{
		Type: 2
		Name: "distance"
		VS: "shaders/world_clip_position.vert"
		FS: "shaders/distance.frag"
	},
	{
		Type: 1
		Name: "shadowMaskDirectional"
		FS: "shaders/shadow_pass_directional.frag"
	},
	{
		Type: 1
		Name: "shadowMaskPoint"
		FS: "shaders/shadow_pass_point.frag"
	},
	{
		Type: 1
		Name: "lightingDirectional"
		FS: "shaders/deferred_lighting_directional.frag"
	},
	{
		Type: 1
		Name: "lightingPoint"
		FS: "shaders/deferred_lighting_point.frag"
	},
	{
		Type: 2
		Name: "yellow"
		VS: "shaders/yellow.vert"
		FS: "shaders/yellow.frag"
	},
	{
		Type: 4
		Name: "grass"
		VS: "shaders/grass.vert"
		FS: "shaders/grass.frag"
		TC: "shaders/grass.tesc"
		TE: "shaders/grass.tese"
	}
);

# loads textures on first use
Textures: (
	{
		Name: "checkerboard"
		Path: "media/checkerboard.jpg"
		SRGB: 1
	},
	{
		Name: "crossNormal"
		Path: "media/cross_normal_tex.jpg"
		SRGB: 0
	},

	#---- water tower ----
	{
		Name: "waterTowerAlbedo"
		Path: "media/water_tower/Base_color.png"
		SRGB: 1
	},
	{
		Name: "waterTowerNormal"
		Path: "media/water_tower/normal.png"
		SRGB: 0
	},
	{
		Name: "waterTowerMetallic"
		Path: "media/water_tower/metallic.png"
		SRGB: 0
	},
	{
		Name: "waterTowerRoughness"
		Path: "media/water_tower/roughness.png"
		SRGB: 0
	}
);

Materials: (
	{
		Name: "test"
		Shader: "geometry"
		Albedo: "checkerboard"
		Normal: "crossNormal"
		Metallic: "black"
		Roughness: "white"
		AO: "white"
	},
	{
		Name: "oldWaterTowerMat"
		Shader: "geometry"
		Albedo: "waterTowerAlbedo"
		Normal: "waterTowerNormal"
		Metallic: "waterTowerMetallic"
		Roughness: "waterTowerRoughness"
	},

	#-------- and the less interesting ones --------
	{
		Name: "deferredBasic"
		Shader: "geometry_basic"
		Albedo: "white"
	},
	{
		Name: "basic"
		Shader: "basic"
		BaseColor: "white"
	}
);

# if no material is assigned to a mesh, it fallbacks to deferredBasic.
MaterialAssignments: (
	{
		Mesh: "pSphere2"
		Material: "test"
	},
	{
		Mesh: "old_water_tower"
		Material: "oldWaterTowerMat"
	}
);